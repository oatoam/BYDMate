version: '3.8'

services:
  postgres:
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: byd_mate
    volumes:
      - postgres_data:/var/lib/postgresql/data

  influxdb:
    image: influxdb:2.7
    restart: always
    ports:
      - "8086:8086"
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: password
      DOCKER_INFLUXDB_INIT_ORG: byd_org
      DOCKER_INFLUXDB_INIT_BUCKET: byd_bucket
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: my-super-secret-token
    volumes:
      - influxdb_data:/var/lib/influxdb2

  emqx:
    image: emqx/emqx:5.0.0
    restart: always
    ports:
      - "1883:1883" # MQTT TCP
      - "8083:8083" # MQTT WebSocket
      - "8084:8084" # REST API
      - "18083:18083" # Dashboard
    environment:
      EMQX_NODE__NAME: emqx@127.0.0.1
      EMQX_DASHBOARD__LISTENERS__HTTP__BIND: 0.0.0.0:18083
      EMQX_LISTENERS__TCP__DEFAULT__BIND: 0.0.0.0:1883
      EMQX_LISTENERS__WS__DEFAULT__BIND: 0.0.0.0:8083
      EMQX_REST__LISTENERS__HTTP__BIND: 0.0.0.0:8084

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  flink-jobmanager:
    image: flink:latest-scala_2.12
    restart: always
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 1
    volumes:
      - flink_shared_data:/opt/flink/usrlib

  flink-taskmanager:
    image: flink:latest-scala_2.12
    restart: always
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 1
    volumes:
      - flink_shared_data:/opt/flink/usrlib
    depends_on:
      - flink-jobmanager

volumes:
  postgres_data:
  influxdb_data:
  flink_shared_data: